plugins {
    id 'java-library'
    id 'java'
    id ('io.qameta.allure') version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'quru.qa'
version '1.0-SNAPSHOT'

allure{
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}


repositories {
    mavenCentral()
    compileJava {
        options.encoding = 'UTF-8'
    }
}

compileTestJava{
    options.encoding='UTF-8'
}

def restAssuredVersion = "5.3.0",
    allureVersion = "2.19.0",
    slf4jVersion = "2.0.7",
    selenideVersion = "6.5.2",
     appiumVersion = "8.0.0",
     restAssured = "4.5.1",
      junitVersion = "5.8.2"

dependencies {
    testImplementation (
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'com.fasterxml.jackson.core:jackson-databind:2.14.2',
            "io.qameta.allure:allure-selenide:$allureVersion",
            'com.fasterxml.jackson.core:jackson-core:2.14.2',
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            'io.github.bonigarcia:webdrivermanager:5.2.1',
            'io.qameta.allure:allure-rest-assured:2.21.0',
            "io.rest-assured:rest-assured:$restAssured",
            'org.junit.jupiter:junit-jupiter-api:5.6.2',
            'io.qameta.allure:allure-selenide:2.21.0',
            "com.codeborne:selenide:$selenideVersion",
            'org.junit.jupiter:junit-jupiter:5.9.2',
            'io.qameta.allure:allure-junit5:2.18.1',
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.appium:java-client:$appiumVersion",
            'io.rest-assured:rest-assured:5.1.0',
            'org.assertj:assertj-core:3.23.1',
            'org.aeonbits.owner:owner:1.0.4',
            'org.slf4j:slf4j-simple:2.0.6'
    )
}

dependencies {
    implementation ('io.qameta.allure:allure-rest-assured:2.21.0',
            'org.projectlombok:lombok:1.18.22',
            'com.codeborne:selenide:6.12.3',
            'org.testng:testng:7.1.0'
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {//благодаря этой строчке передаются параметры в скрипт сборки
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}


test {
    systemProperty "chromeoptions.prefs", "init.accept_languages=ru"
    useJUnitPlatform()
}

task steamMobile(type: Test) {
    useJUnitPlatform {
        includeTags "steamMobile"
    }
}

task steamUI(type: Test) {
    useJUnitPlatform {
        includeTags ("steamUI")
    }
}

task steamApi(type: Test){
    useJUnitPlatform{
        includeTags("steamApi")
    }
}
